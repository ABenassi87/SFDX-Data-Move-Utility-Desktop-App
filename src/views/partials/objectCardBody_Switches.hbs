<!--SWITCHES-->
<div class="form-row" ng-show="object.extraData.operation != 'Readonly'">
    <div class="form-group col-md-12">

        <label class="block">Options:</label>

        <div class="custom-control custom-switch inline-block">
            <input type="checkbox" class="custom-control-input" id="allRecords{[{object.id}]}"
                ng-model="object.extraData.allRecords" ng-change="updateObjectParameters(object)">
            <label class="custom-control-label" for="allRecords{[{object.id}]}">
                All records
                <i class="fa fa-question-circle" data-toggle="tooltip"
                    title="When checked always all records for this object will be processed (depend on the defined object limitations). Any additional automatical run-time filters that helps to determine and process only minimal subsets of records required for keeping relationships between objects - will not be applied."></i>
            </label>
        </div>

        <div class="custom-control custom-switch inline-block"
            ng-show="object.extraData.operation != 'Delete' && object.extraData.operation != 'Readonly'">
            <input type="checkbox" class="custom-control-input" id="deleteOldData{[{object.id}]}"
                ng-model="object.extraData.deleteOldData" ng-change="updateObjectParameters(object)">
            <label class="custom-control-label" for="deleteOldData{[{object.id}]}">
                Delete old data
                <i class="fa fa-question-circle" data-toggle="tooltip"
                    title="When checked all of the old records will be cleared from the Target before inserting the new records. This deleting function does not respect Limit value specified for the current object, but it still respects the Where clause. You can also specify special Where clause for the deleting function below."></i>
            </label>
        </div>

        <div class="custom-control custom-switch inline-block"
            ng-show="object.extraData.deleteOldData || object.extraData.operation == 'Delete'">
            <input type="checkbox" class="custom-control-input" id="deleteAll{[{object.id}]}"
                ng-model="object.extraData.deleteAll" ng-change="updateObjectParameters(object)">
            <label class="custom-control-label" for="deleteAll{[{object.id}]}">
                Delete ALL records
                <i class="fa fa-question-circle" data-toggle="tooltip"
                    title="Force Plugin to delete all records of this sObject before performing the selected operation."></i>
            </label>
        </div>

        <div class="custom-control custom-switch inline-block ml-3">
            <input type="checkbox" class="custom-control-input" id="useMocking{[{object.id}]}"
                ng-model="object.extraData.updateWithMockData" ng-change="updateObjectParameters(object)">
            <label class="custom-control-label" for="useMocking{[{object.id}]}">
                Use data masking
                <i class="fa fa-question-circle" data-toggle="tooltip"
                    title="When checked - enables export of data to CSV files with masked values instead of the original."></i>
            </label>
        </div>

        <div class="custom-control custom-switch inline-block ml-3" ng-show="object.extraData.updateWithMockData">
            <input type="checkbox" class="custom-control-input" id="mockCSVData{[{object.id}]}"
                ng-model="object.extraData.mockCSVData" ng-change="updateObjectParameters(object)">
            <label class="custom-control-label" for="mockCSVData{[{object.id}]}">
                Mask CSV files
                <i class="fa fa-question-circle" data-toggle="tooltip"
                    title="When checked the data masking will be applied also for the exported CSV files otherwise the original values from the data source will be used to export into CSV files."></i>
            </label>
        </div>

        <div class="custom-control custom-switch inline-block ml-3">
            <input type="checkbox" class="custom-control-input" id="useCSVValuesMapping{[{object.id}]}"
                ng-model="object.extraData.useCSVValuesMapping" ng-change="updateObjectParameters(object)">
            <label class="custom-control-label" for="useCSVValuesMapping{[{object.id}]}">
                Use CSV source file mapping
                <i class="fa fa-question-circle" data-toggle="tooltip"
                    title="When checked and CSV file set as the the data source - plugin will replace values provided within the file according to the mapping CSV file prior uploading to the Target."></i>
            </label>
        </div>

    </div>
</div>